/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// SnapshotActionsSpecApplyConfiguration represents an declarative configuration of the SnapshotActionsSpec type for use
// with apply.
type SnapshotActionsSpecApplyConfiguration struct {
	Action         *string `json:"action,omitempty"`
	SnapshotName   *string `json:"snapshotName,omitempty"`
	SourcePVC      *string `json:"sourcePVC,omitempty"`
	DestinationPVC *string `json:"destinationPVC,omitempty"`
}

// SnapshotActionsSpecApplyConfiguration constructs an declarative configuration of the SnapshotActionsSpec type for use with
// apply.
func SnapshotActionsSpec() *SnapshotActionsSpecApplyConfiguration {
	return &SnapshotActionsSpecApplyConfiguration{}
}

// WithAction sets the Action field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Action field is set to the value of the last call.
func (b *SnapshotActionsSpecApplyConfiguration) WithAction(value string) *SnapshotActionsSpecApplyConfiguration {
	b.Action = &value
	return b
}

// WithSnapshotName sets the SnapshotName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SnapshotName field is set to the value of the last call.
func (b *SnapshotActionsSpecApplyConfiguration) WithSnapshotName(value string) *SnapshotActionsSpecApplyConfiguration {
	b.SnapshotName = &value
	return b
}

// WithSourcePVC sets the SourcePVC field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SourcePVC field is set to the value of the last call.
func (b *SnapshotActionsSpecApplyConfiguration) WithSourcePVC(value string) *SnapshotActionsSpecApplyConfiguration {
	b.SourcePVC = &value
	return b
}

// WithDestinationPVC sets the DestinationPVC field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DestinationPVC field is set to the value of the last call.
func (b *SnapshotActionsSpecApplyConfiguration) WithDestinationPVC(value string) *SnapshotActionsSpecApplyConfiguration {
	b.DestinationPVC = &value
	return b
}
